# Generated by Django 5.0.4 on 2024-04-11 01:34

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Edition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edition_no', models.IntegerField()),
                ('tournament_name', models.CharField(blank=True, null=True)),
                ('sponsor_name', models.CharField(blank=True, null=True)),
                ('year', models.IntegerField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('category', models.CharField(blank=True, choices=[('250', 'ATP 250'), ('500', 'ATP 500'), ('1000', 'ATP Masters 1000'), ('GS', 'Grand Slam')], max_length=4, null=True)),
                ('currency', models.CharField(blank=True, choices=[('AUD', 'A$'), ('USD', '$'), ('GBP', '£'), ('EUR', '€')], max_length=3, null=True)),
                ('pm', models.IntegerField(blank=True, null=True)),
                ('tfc', models.IntegerField(blank=True, null=True)),
                ('supervisors', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, null=True), blank=True, null=True, size=None)),
                ('venue', models.CharField(blank=True, null=True)),
                ('city', models.CharField()),
                ('country', models.CharField(max_length=3)),
                ('environment', models.CharField(choices=[('I', 'Indoor'), ('O', 'Outdoor')], max_length=1)),
                ('surface', models.CharField(choices=[('Cl', 'Clay'), ('C', 'Carpet'), ('G', 'Grass'), ('H', 'Hard')], max_length=2)),
                ('hard_type', models.CharField(blank=True, choices=[('L', 'Laykold'), ('PC', 'Plexicushion'), ('PP', 'Plexipave'), ('A', 'Acrylic on wood'), ('G', 'Greenset'), ('RA', 'Rebound ace'), ('O', 'Opticourt'), ('R', 'Rukort'), ('DT', 'Decoturf'), ('SM', 'SportMaster')], max_length=2, null=True)),
                ('final_score', models.CharField(blank=True, max_length=20, null=True)),
                ('winner_pm', models.IntegerField(blank=True, null=True)),
                ('winner_pts', models.IntegerField(blank=True, null=True)),
                ('finalist_pm', models.IntegerField(blank=True, null=True)),
                ('finalist_pts', models.IntegerField(blank=True, null=True)),
                ('semifinalist_pm', models.IntegerField(blank=True, null=True)),
                ('semifinalist_pts', models.IntegerField(blank=True, null=True)),
                ('quarterfinalist_pm', models.IntegerField(blank=True, null=True)),
                ('quarterfinalist_pts', models.IntegerField(blank=True, null=True)),
                ('r16_pm', models.IntegerField(blank=True, null=True)),
                ('r16_pts', models.IntegerField(blank=True, null=True)),
                ('r32_pm', models.IntegerField(blank=True, null=True)),
                ('r32_pts', models.IntegerField(blank=True, null=True)),
                ('r64_pm', models.IntegerField(blank=True, null=True)),
                ('r64_pts', models.IntegerField(blank=True, null=True)),
                ('r128_pm', models.IntegerField(blank=True, null=True)),
                ('r128_pts', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.CharField(primary_key=True, serialize=False)),
                ('first_name', models.CharField()),
                ('last_name', models.CharField()),
                ('full_name', models.CharField()),
                ('status', models.BooleanField()),
                ('turned_pro', models.IntegerField(blank=True, null=True)),
                ('retired', models.IntegerField(blank=True, null=True)),
                ('country', models.CharField(max_length=3)),
                ('country_yr', models.IntegerField(blank=True, null=True)),
                ('prev_country', models.CharField(blank=True, max_length=3, null=True)),
                ('prev_country_yr', models.IntegerField(blank=True, null=True)),
                ('first_country', models.CharField(blank=True, max_length=3, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('rh', models.BooleanField(blank=True, null=True)),
                ('bh1', models.BooleanField(blank=True, null=True)),
                ('height_cm', models.IntegerField(blank=True, null=True)),
                ('height_ft', models.CharField(blank=True, null=True)),
                ('coaches', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, null=True), blank=True, null=True, size=None)),
                ('preferred_surfaces', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('Cl', 'Clay'), ('C', 'Carpet'), ('G', 'Grass'), ('H', 'Hard')], max_length=2), blank=True, null=True, size=None)),
                ('age_started', models.IntegerField(blank=True, null=True)),
                ('career_high', models.IntegerField(blank=True, null=True)),
                ('ch_date', models.DateField(blank=True, null=True)),
                ('pm_USD', models.IntegerField(default=0)),
                ('titles', models.IntegerField(default=0)),
                ('win', models.IntegerField(default=0)),
                ('loss', models.IntegerField(default=0)),
                ('gladiator', models.BooleanField(default=False)),
                ('headshot', models.BooleanField(default=False)),
                ('ao_round', models.CharField(blank=True, choices=[('128', 'Round of 128'), ('64', 'Round of 64'), ('32', 'Round of 32'), ('16', 'Round of 16'), ('QF', 'Quarterfinals'), ('SF', 'Semifinals'), ('F', 'Final'), ('W', 'Win'), ('RR', 'Round robin'), ('G', 'Gold'), ('S', 'Silver'), ('B', 'Bronze'), ('A', 'Alternate')], max_length=3, null=True)),
                ('ao_years', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, null=True, size=None)),
                ('rg_round', models.CharField(blank=True, choices=[('128', 'Round of 128'), ('64', 'Round of 64'), ('32', 'Round of 32'), ('16', 'Round of 16'), ('QF', 'Quarterfinals'), ('SF', 'Semifinals'), ('F', 'Final'), ('W', 'Win'), ('RR', 'Round robin'), ('G', 'Gold'), ('S', 'Silver'), ('B', 'Bronze'), ('A', 'Alternate')], max_length=3, null=True)),
                ('rg_years', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, null=True, size=None)),
                ('wimbledon_round', models.CharField(blank=True, choices=[('128', 'Round of 128'), ('64', 'Round of 64'), ('32', 'Round of 32'), ('16', 'Round of 16'), ('QF', 'Quarterfinals'), ('SF', 'Semifinals'), ('F', 'Final'), ('W', 'Win'), ('RR', 'Round robin'), ('G', 'Gold'), ('S', 'Silver'), ('B', 'Bronze'), ('A', 'Alternate')], max_length=3, null=True)),
                ('wimbledon_years', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, null=True, size=None)),
                ('uso_round', models.CharField(blank=True, choices=[('128', 'Round of 128'), ('64', 'Round of 64'), ('32', 'Round of 32'), ('16', 'Round of 16'), ('QF', 'Quarterfinals'), ('SF', 'Semifinals'), ('F', 'Final'), ('W', 'Win'), ('RR', 'Round robin'), ('G', 'Gold'), ('S', 'Silver'), ('B', 'Bronze'), ('A', 'Alternate')], max_length=3, null=True)),
                ('uso_years', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, null=True, size=None)),
                ('finals_round', models.CharField(blank=True, choices=[('128', 'Round of 128'), ('64', 'Round of 64'), ('32', 'Round of 32'), ('16', 'Round of 16'), ('QF', 'Quarterfinals'), ('SF', 'Semifinals'), ('F', 'Final'), ('W', 'Win'), ('RR', 'Round robin'), ('G', 'Gold'), ('S', 'Silver'), ('B', 'Bronze'), ('A', 'Alternate')], max_length=3, null=True)),
                ('finals_years', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, null=True, size=None)),
                ('davis_round', models.CharField(blank=True, choices=[('128', 'Round of 128'), ('64', 'Round of 64'), ('32', 'Round of 32'), ('16', 'Round of 16'), ('QF', 'Quarterfinals'), ('SF', 'Semifinals'), ('F', 'Final'), ('W', 'Win'), ('RR', 'Round robin'), ('G', 'Gold'), ('S', 'Silver'), ('B', 'Bronze'), ('A', 'Alternate')], max_length=3, null=True)),
                ('davis_years', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, null=True, size=None)),
                ('olympics_round', models.CharField(blank=True, choices=[('128', 'Round of 128'), ('64', 'Round of 64'), ('32', 'Round of 32'), ('16', 'Round of 16'), ('QF', 'Quarterfinals'), ('SF', 'Semifinals'), ('F', 'Final'), ('W', 'Win'), ('RR', 'Round robin'), ('G', 'Gold'), ('S', 'Silver'), ('B', 'Bronze'), ('A', 'Alternate')], max_length=3, null=True)),
                ('olympics_years', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, null=True, size=None)),
                ('hopman_round', models.CharField(blank=True, choices=[('128', 'Round of 128'), ('64', 'Round of 64'), ('32', 'Round of 32'), ('16', 'Round of 16'), ('QF', 'Quarterfinals'), ('SF', 'Semifinals'), ('F', 'Final'), ('W', 'Win'), ('RR', 'Round robin'), ('G', 'Gold'), ('S', 'Silver'), ('B', 'Bronze'), ('A', 'Alternate')], max_length=3, null=True)),
                ('hopman_years', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, null=True, size=None)),
                ('gs_cup_round', models.CharField(blank=True, choices=[('128', 'Round of 128'), ('64', 'Round of 64'), ('32', 'Round of 32'), ('16', 'Round of 16'), ('QF', 'Quarterfinals'), ('SF', 'Semifinals'), ('F', 'Final'), ('W', 'Win'), ('RR', 'Round robin'), ('G', 'Gold'), ('S', 'Silver'), ('B', 'Bronze'), ('A', 'Alternate')], max_length=3, null=True)),
                ('gs_cup_years', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, null=True, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField()),
                ('start_year', models.IntegerField()),
                ('end_year', models.IntegerField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_no', models.IntegerField(blank=True, null=True)),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('seed', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('A', 'Alt'), ('LL', 'LL'), ('PR', 'PR'), ('Q', 'Q'), ('SE', 'SE'), ('WC', 'WC')], max_length=2, null=True)),
                ('wd', models.CharField(blank=True, null=True)),
                ('ret', models.CharField(blank=True, null=True)),
                ('wo', models.CharField(blank=True, null=True)),
                ('defaulted', models.CharField(blank=True, null=True)),
                ('points', models.IntegerField(blank=True, null=True)),
                ('pm', models.IntegerField(blank=True, null=True)),
                ('edition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='tennis.edition')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='editions', to='tennis.player')),
            ],
        ),
        migrations.CreateModel(
            name='MatchScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.CharField(choices=[('128', 'Round of 128'), ('64', 'Round of 64'), ('32', 'Round of 32'), ('16', 'Round of 16'), ('QF', 'Quarterfinals'), ('SF', 'Semifinals'), ('F', 'Final'), ('W', 'Win'), ('RR', 'Round robin'), ('G', 'Gold'), ('S', 'Silver'), ('B', 'Bronze'), ('A', 'Alternate')], max_length=3)),
                ('match_no', models.IntegerField(blank=True, null=True)),
                ('duration_mins', models.IntegerField(blank=True, null=True)),
                ('incomplete', models.CharField(blank=True, choices=[('B', 'Bye'), ('D', 'Default'), ('R', 'Retirement'), ('WO', 'Walkover')], max_length=2, null=True)),
                ('umpire', models.CharField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('s1p1', models.IntegerField(blank=True, null=True)),
                ('s1p2', models.IntegerField(blank=True, null=True)),
                ('t1p1', models.IntegerField(blank=True, null=True)),
                ('t1p2', models.IntegerField(blank=True, null=True)),
                ('s2p1', models.IntegerField(blank=True, null=True)),
                ('s2p2', models.IntegerField(blank=True, null=True)),
                ('t2p1', models.IntegerField(blank=True, null=True)),
                ('t2p2', models.IntegerField(blank=True, null=True)),
                ('s3p1', models.IntegerField(blank=True, null=True)),
                ('s3p2', models.IntegerField(blank=True, null=True)),
                ('t3p1', models.IntegerField(blank=True, null=True)),
                ('t3p2', models.IntegerField(blank=True, null=True)),
                ('s4p1', models.IntegerField(blank=True, null=True)),
                ('s4p2', models.IntegerField(blank=True, null=True)),
                ('t4p1', models.IntegerField(blank=True, null=True)),
                ('t4p2', models.IntegerField(blank=True, null=True)),
                ('s5p1', models.IntegerField(blank=True, null=True)),
                ('s5p2', models.IntegerField(blank=True, null=True)),
                ('t5p1', models.IntegerField(blank=True, null=True)),
                ('t5p2', models.IntegerField(blank=True, null=True)),
                ('edition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='tennis.edition')),
                ('p1_no', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='entry_matches_1', to='tennis.entry')),
                ('p2_no', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='entry_matches_2', to='tennis.entry')),
                ('p1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='p1_matches', to='tennis.player')),
                ('p2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='p2_matches', to='tennis.player')),
                ('winner_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='player_wins', to='tennis.player')),
            ],
        ),
        migrations.AddField(
            model_name='edition',
            name='finalist',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='finals', to='tennis.player'),
        ),
        migrations.AddField(
            model_name='edition',
            name='winner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='title_wins', to='tennis.player'),
        ),
        migrations.AddField(
            model_name='edition',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='editions', to='tennis.tournament'),
        ),
    ]
